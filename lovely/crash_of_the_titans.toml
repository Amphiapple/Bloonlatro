[manifest]
version = "1.0.0"
dump_lua = true
priority = 1

[[patches]]
[patches.pattern]
target = "blind.lua"
pattern = '''
if self.debuff.h_size_ge and #cards < self.debuff.h_size_ge then
    self.triggered = true
    return true
end
'''
position = "before"
payload = '''
if G.GAME.modifiers.crash_of_the_titans then
    if #cards <= 4 then 
        self.triggered = true
        return true
    end

    local text,disp_text,poker_hands,scoring_hand,non_loc_disp_text = G.FUNCS.get_poker_hand_info(cards)
    
    local final_scoring_hand = {}
    for i=1, #cards do
        local card = cards[i]
        local splashed = SMODS.always_scores(card) or next(find_joker('Splash'))
        local unsplashed = SMODS.never_scores(card)
        if not splashed then
            for _, scoring_card in pairs(scoring_hand) do
                if scoring_card == card then splashed = true end
            end
        end
        local effects = {}
        SMODS.calculate_context({modify_scoring_hand = true, other_card = card, full_hand = cards, scoring_hand = scoring_hand, in_scoring = true}, effects)
        local flags = SMODS.trigger_effects(effects, card)
        if flags.add_to_hand then splashed = true end
        if flags.remove_from_hand then unsplashed = true end
        if splashed and not unsplashed then table.insert(final_scoring_hand, card) end
    end
        
    scoring_hand = final_scoring_hand
    
    if #scoring_hand <= 4 then
        self.triggered = true
        return true
    end
end
'''
match_indent = true
